plugins {
    id "me.champeau.gradle.jmh" version "0.5.0-rc-1"
}

description = ''
dependencies {
    jmh project(':kombi-lib')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jmhJar.archiveFileName = 'benchmarks.jar'
jmh {
    jmhVersion = '1.19' // Specifies JMH version

    include = ['.*'] // include pattern (regular expression) for benchmarks to be executed
    jvmArgs = ['-Xms4g', '-Xmx4g']


    benchmarkMode = ['thrpt'] // Benchmark mode. Available modes are: [Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss, All/all]
    timeUnit = 's'// Output time unit. Available time units are: [m, s, ms, us, ns].
    verbosity = 'NORMAL' // Verbosity mode. Available modes are: [SILENT, NORMAL, EXTRA]
    forceGC = true // Should JMH force GC between iterations?
    failOnError = false // Should JMH fail immediately if any benchmark had experienced the unrecoverable error?

    operationsPerInvocation = 1 // Operations per invocation.
    batchSize = 1 // Batch size: number of benchmark method calls per operation. (some benchmark modes can ignore this setting)
    warmupBatchSize = 1 // Warmup batch size: number of benchmark method calls per operation.
    fork = 1 // How many times to forks a single benchmark. Use 0 to disable forking altogether
    warmupForks = 0 // How many warmup forks to make for a single benchmark. 0 to disable warmup forks.
    threads = 1 // Number of worker threads to run with.

    iterations = 10 // Number of measurement iterations to do.
    warmupIterations = 10 // Number of warmup iterations to do.

    humanOutputFile = project.file("${project.buildDir}/reports/jmh/human.txt") // human-readable output file
    resultsFile = project.file("${project.buildDir}/reports/jmh/results.csv") // results file
    resultFormat = 'CSV' // Result format type (one of CSV, JSON, NONE, SCSV, TEXT)

    //more options by the link https://github.com/melix/jmh-gradle-plugin
}


